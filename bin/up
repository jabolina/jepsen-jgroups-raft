#!/usr/bin/env bash

# "To provide additional docker-compose args, set the COMPOSE var. Ex:
# COMPOSE="-f FILE_PATH_HERE"

# See that this is based on the Jepsen script for using Docker.
# https://github.com/jepsen-io/jepsen/blob/9ae4ce3ffe1dc23c19a123bb9df9183c40f91cde/docker/bin/up

set -o errexit
set -o pipefail
set -o nounset

ERROR() {
    printf "\e[101m\e[97m[ERROR]\e[49m\e[39m %s\n" "$@"
}

WARNING() {
    printf "\e[101m\e[97m[WARNING]\e[49m\e[39m %s\n" "$@"
}

INFO() {
    printf "\e[104m\e[97m[INFO]\e[49m\e[39m %s\n" "$@"
}

exists() {
    type "$1" > /dev/null 2>&1
}

exists ssh-keygen || { ERROR "Please install ssh-keygen (apt-get install openssh-client)"; exit 1; }
exists perl || { ERROR "Please install perl (apt-get install perl)"; exit 1; }

# Generate SSH keys for the control node
if [ ! -f ./bin/secret/node.env ]; then
    INFO "Generating key pair"
    mkdir -p bin/secret
    ssh-keygen -t rsa -N "" -f ./bin/secret/id_rsa

    INFO "Generating ./bin/secret/control.env"
    { echo "# generated by bin/docker/up.sh, parsed by bin/docker/control/bashrc";
      echo "# NOTE: newline is expressed as ↩";
      echo "SSH_PRIVATE_KEY=$(perl -p -e "s/\n/↩/g" < ./bin/secret/id_rsa)";
      echo "SSH_PUBLIC_KEY=$(cat ./bin/secret/id_rsa.pub)"; } >> ./bin/secret/control.env

    INFO "Generating authorized_keys"
    { echo "# generated by jepsen/docker/up.sh";
      echo "$(cat ./bin/secret/id_rsa.pub)"; } >> ./bin/secret/authorized_keys

    INFO "Generating ./bin/secret/node.env"
    { echo "# generated by jepsen/docker/up.sh, parsed by the \"tutum/debian\" docker image entrypoint script";
      echo "ROOT_PASS=root"; } >> ./bin/secret/node.env
else
    INFO "No need to generate key pair"
fi

exclude_params=(
  --exclude=./bin
  --exclude=./doc
  --exclude=./.git
)
case $(uname) in
  Linux)
      exclude_params+=(--exclude-ignore=.gitignore)
      ;;
esac
# Dockerfile does not allow `ADD ..`. So we need to copy it here in setup.
rm -rf ./bin/docker/control/jepsen
mkdir -p ./bin/docker/control/jepsen
INFO "Copying .. to docker/control/jepsen"
(
    (tar "${exclude_params[@]}" -cf - .)  | tar Cxf ./bin/docker/control/jepsen -
)

exists docker ||
    { ERROR "Please install docker (https://docs.docker.com/engine/installation/)";
      exit 1; }
exists docker-compose ||
    { ERROR "Please install docker-compose (https://docs.docker.com/compose/install/)";
      exit 1; }

INFO "Running \`docker-compose build\`"
docker-compose --compatibility -p jepsen -f bin/docker/docker-compose.yml build

INFO "Running \`docker-compose up\`"
docker-compose --compatibility -p jepsen -f bin/docker/docker-compose.yml up
